name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTDOCFLAGS: "--deny warnings"
  RUSTFLAGS: "--deny warnings"
  RUST_TEST_THREADS: 1
  COREHOST_TRACE: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: ["nightly", "stable"]
        target: ["x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc", "i686-pc-windows-msvc", "x86_64-apple-darwin"]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            shell_ext: .sh
            arch: x64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            dotnet_install: .ps1
            arch: x64
          - target: i686-pc-windows-msvc
            os: windows-latest
            dotnet_install: .ps1
            arch: x86
          - target: x86_64-apple-darwin
            os: macos-latest
            dotnet_install: .sh
            arch: x64
    steps:
    - uses: actions/checkout@v2
    - name: Install latest ${{ matrix.toolchain }}
      uses: actions-rs/toolchain@v1
      with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          override: true
    - name: Build
      run: cargo build --target ${{ matrix.target }}
    - name: Test
      run: cargo test --target ${{ matrix.target }} --all-targets

  examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
    - name: Run example 'run-app'
      run: cargo run --example run-app
    - name: Run example 'call-managed-function'
      run: cargo run --example call-managed-function
    - name: Run example 'passing-parameters'
      run: cargo run --example passing-parameters

  documentation:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: nightly
          override: true
    - name: Generate documentation
      run: cargo doc --all-features
    - name: Install cargo-deadlinks
      run: cargo install cargo-deadlinks
    - name: Check dead links in doc
      run: cargo deadlinks

  clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
